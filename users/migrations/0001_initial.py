# Generated by Django 2.2.6 on 2020-04-18 04:20

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('email', models.EmailField(blank=True, max_length=100)),
                ('Student_id', models.CharField(blank=True, max_length=8)),
                ('gender', models.CharField(blank=True, max_length=8)),
                ('mobile_no', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AssignFaculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'AssignFaculty',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(blank=True, max_length=20)),
                ('Course_name', models.CharField(blank=True, max_length=30)),
                ('Course_code', models.CharField(blank=True, max_length=15)),
            ],
            options={
                'db_table': 'Student',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Department_name', models.CharField(blank=True, max_length=20)),
                ('Department_code', models.CharField(blank=True, max_length=6)),
            ],
            options={
                'db_table': 'Department',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Semester', models.CharField(blank=True, max_length=20)),
                ('type', models.CharField(blank=True, max_length=6)),
            ],
            options={
                'db_table': 'Semester',
            },
        ),
        migrations.CreateModel(
            name='marks_upload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(upload_to='documents/')),
                ('Department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Department')),
                ('Semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Semester')),
                ('subject_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.AssignFaculty')),
            ],
        ),
        migrations.CreateModel(
            name='Assignsubtosem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Department')),
                ('Semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Semester')),
                ('course_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.Course')),
            ],
            options={
                'db_table': 'Assignsemester',
            },
        ),
        migrations.AddField(
            model_name='assignfaculty',
            name='course_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='users.Course'),
        ),
        migrations.AddField(
            model_name='assignfaculty',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='Semester',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Semester'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Department'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
